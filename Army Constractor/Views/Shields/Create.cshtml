@model Army_Constractor.Models.Shield

@{
    ViewBag.Title = "Create";
}

<h2>Создать щит</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Html.DisplayFor(model => model.ShieldName)</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <table class="editTables" border="0">
            <tr>
                <td class="firstColumn">Название</td>
                <td colspan="3" class="secondColumn">
                    @Html.EditorFor(model => model.ShieldName, new { htmlAttributes = new { @class = "inputsMedium" } })
                    @Html.ValidationMessageFor(model => model.ShieldName, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="firstColumn">@Html.LabelFor(model => model.ShieldDefBonus)</td>
                <td><input type="button" class="arrowButton" value="-" onclick="shieldPriceCalcMinus()"></td>
                <td>
                    @Html.EditorFor(model => model.ShieldDefBonus, new { htmlAttributes = new { @class = "inputsSmall" } })
                    @Html.ValidationMessageFor(model => model.ShieldDefBonus, "", new { @class = "text-danger" })
                </td>
                <td><input type="button" class="arrowButton" value="+" onclick="shieldPriceCalcPlus()"></td>
            </tr>
            <tr>
                <td class="firstColumn">Стоимость</td>
                <td colspan="3">
                    <input type="number" id="ShieldPrice" readonly class="inputsMedium" onload="shieldPriceCalc()">
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    @Html.TextArea("Description", null, htmlAttributes: new { @class = "textArea" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td colspan="2" class="firstColumn">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Создать" class="btn btn-default" />
                        </div>
                    </div>
                </td>
                <td colspan="2">
                    @Html.ActionLink("Назад", "Index")
                </td>
            </tr>
        </table>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}






@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Shield</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ShieldName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShieldName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShieldName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShieldDefBonus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShieldDefBonus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShieldDefBonus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@
